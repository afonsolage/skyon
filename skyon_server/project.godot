; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Object",
"class": "AIComponent",
"language": "GDScript",
"path": "res://scripts/components/ai_component.gd"
}, {
"base": "Node",
"class": "AISystem",
"language": "GDScript",
"path": "res://scripts/systems/ai_system.gd"
}, {
"base": "Node",
"class": "BehaviourTreeNode",
"language": "GDScript",
"path": "res://scripts/shared/behaviour_tree/behaviour_tree_node.gd"
}, {
"base": "BehaviourTreeNode",
"class": "BehaviourTreeNodeComposite",
"language": "GDScript",
"path": "res://scripts/shared/behaviour_tree/composite/behaviour_tree_node_composite.gd"
}, {
"base": "BehaviourTreeNodeComposite",
"class": "BehaviourTreeNodeCompositeSelector",
"language": "GDScript",
"path": "res://scripts/shared/behaviour_tree/composite/behaviour_tree_node_selector.gd"
}, {
"base": "BehaviourTreeNodeComposite",
"class": "BehaviourTreeNodeCompositeSequence",
"language": "GDScript",
"path": "res://scripts/shared/behaviour_tree/composite/behaviour_tree_node_sequence.gd"
}, {
"base": "BehaviourTreeNode",
"class": "BehaviourTreeNodeDecorator",
"language": "GDScript",
"path": "res://scripts/shared/behaviour_tree/decorator/behaviour_tree_node_decorator.gd"
}, {
"base": "BehaviourTreeNodeDecorator",
"class": "BehaviourTreeNodeDecoratorInverter",
"language": "GDScript",
"path": "res://scripts/shared/behaviour_tree/decorator/behaviour_tree_node_inverter.gd"
}, {
"base": "BehaviourTreeNodeDecorator",
"class": "BehaviourTreeNodeDecoratorLimiter",
"language": "GDScript",
"path": "res://scripts/shared/behaviour_tree/decorator/behaviour_tree_node_limiter.gd"
}, {
"base": "BehaviourTreeNode",
"class": "BehaviourTreeNodeLeaf",
"language": "GDScript",
"path": "res://scripts/shared/behaviour_tree/leaf/behaviour_tree_node_leaf.gd"
}, {
"base": "Reference",
"class": "BehaviourTreeResult",
"language": "GDScript",
"path": "res://scripts/shared/behaviour_tree/behaviour_tree_result.gd"
}, {
"base": "Node",
"class": "BehaviourTreeRoot",
"language": "GDScript",
"path": "res://scripts/shared/behaviour_tree/behaviour_tree_root.gd"
}, {
"base": "BehaviourTreeNodeLeaf",
"class": "BehavourTreeNodeLeafAction",
"language": "GDScript",
"path": "res://scripts/shared/behaviour_tree/leaf/behaviour_tree_node_action.gd"
}, {
"base": "BehaviourTreeNodeLeaf",
"class": "BehavourTreeNodeLeafCondition",
"language": "GDScript",
"path": "res://scripts/shared/behaviour_tree/leaf/behaviour_tree_node_condition.gd"
}, {
"base": "Object",
"class": "CombatComponent",
"language": "GDScript",
"path": "res://scripts/components/combat_component.gd"
}, {
"base": "Node",
"class": "CombatSystem",
"language": "GDScript",
"path": "res://scripts/systems/combat_system.gd"
}, {
"base": "Object",
"class": "GravityComponent",
"language": "GDScript",
"path": "res://scripts/components/gravity_component.gd"
}, {
"base": "Reference",
"class": "HeightMap",
"language": "GDScript",
"path": "res://scripts/tools/height_map.gd"
}, {
"base": "Reference",
"class": "HeightMapGenerator",
"language": "GDScript",
"path": "res://scripts/tools/height_map_generator.gd"
}, {
"base": "Object",
"class": "Log",
"language": "GDScript",
"path": "res://scripts/shared/log.gd"
}, {
"base": "KinematicBody",
"class": "Monster",
"language": "GDScript",
"path": "res://scripts/nodes/monster.gd"
}, {
"base": "Node",
"class": "MonsterSystem",
"language": "GDScript",
"path": "res://scripts/systems/monster_system.gd"
}, {
"base": "Node",
"class": "NetSystem",
"language": "GDScript",
"path": "res://scripts/systems/net_system.gd"
}, {
"base": "KinematicBody",
"class": "Player",
"language": "GDScript",
"path": "res://scripts/nodes/player.gd"
}, {
"base": "Node",
"class": "WorldSystem",
"language": "GDScript",
"path": "res://scripts/systems/world_system.gd"
} ]
_global_script_class_icons={
"AIComponent": "",
"AISystem": "",
"BehaviourTreeNode": "",
"BehaviourTreeNodeComposite": "",
"BehaviourTreeNodeCompositeSelector": "res://scripts/shared/behaviour_tree/icons/selector.png",
"BehaviourTreeNodeCompositeSequence": "res://scripts/shared/behaviour_tree/icons/sequence.png",
"BehaviourTreeNodeDecorator": "",
"BehaviourTreeNodeDecoratorInverter": "res://scripts/shared/behaviour_tree/icons/decorator.png",
"BehaviourTreeNodeDecoratorLimiter": "res://scripts/shared/behaviour_tree/icons/decorator.png",
"BehaviourTreeNodeLeaf": "",
"BehaviourTreeResult": "",
"BehaviourTreeRoot": "res://scripts/shared/behaviour_tree/icons/root.png",
"BehavourTreeNodeLeafAction": "res://scripts/shared/behaviour_tree/icons/action.png",
"BehavourTreeNodeLeafCondition": "res://scripts/shared/behaviour_tree/icons/condition.png",
"CombatComponent": "",
"CombatSystem": "",
"GravityComponent": "",
"HeightMap": "",
"HeightMapGenerator": "",
"Log": "",
"Monster": "",
"MonsterSystem": "",
"NetSystem": "",
"Player": "",
"WorldSystem": ""
}

[application]

config/name="Skyon Server"
run/main_scene="res://scenes/main.tscn"

[autoload]

Systems="*res://scripts/singletons/systems.gd"

[display]

window/vsync/use_vsync=false

[input]

move_forward={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":87,"unicode":0,"echo":false,"script":null)
 ]
}
move_backward={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":83,"unicode":0,"echo":false,"script":null)
 ]
}
turn_left={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":65,"unicode":0,"echo":false,"script":null)
 ]
}
turn_right={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":68,"unicode":0,"echo":false,"script":null)
 ]
}
strafe_left={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":81,"unicode":0,"echo":false,"script":null)
 ]
}
strafe_right={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":69,"unicode":0,"echo":false,"script":null)
 ]
}

[layer_names]

3d_physics/layer_1="Terrain"
3d_physics/layer_2="Monsters"
3d_physics/layer_3="Players"
3d_physics/layer_4="Resources"

[rendering]

environment/default_environment="res://default_env.tres"
